#spring.datasource.url= jdbc:postgresql://localhost:5432/netflik?binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified
spring.datasource.url= jdbc:postgresql://localhost:5431/netflik?binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified


spring.datasource.username=netflik
spring.datasource.password=netflik
spring.datasource.driver-class-name=org.postgresql.Driver


spring.jpa.hibernate.ddl-auto=update

spring.jackson.time-zone = Asia/Kolkata

log4j.logger.org.springframework.web=INFO
server.port=8200
#rabbit mq
rabbitmq.exchange.name=movie_exchange
rabbitmq.queue.email.name=email
rabbitmq.binding.email.routing.key=email_routing_key
rabbitmq.queue.movie.add=add_movie
rabbitmq.binding.movieAdd.routing.key=addMovie_routing_key
rabbitmq.queue.movie.update=update_movie
rabbitmq.queue.movieUpdate.routing.key=updateMovie_routing_key
rabbitmq.queue.movie.delete=delete_movie
rabbitmq.queue.movieDelete.routing.key=deleteMovie_routing_key


management.endpoints.web.exposure.include=mappings
# cycle bean
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.max-file-size=50MB

#scheduler publisher
movie-service.outbox-scheduler-fixed-rate=10000
movie-service.outbox-scheduler-initial-delay=10000
# rabbitmq
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672




spring.application.name=movie-service



#keycloak config

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/tenflix/protocol/openid-connect/certs
spring.main.allow-bean-definition-overriding=true


# eureka client config

eureka.instance.preferIpAddress = true 
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
# eureka.client.register-with-eureka=true
# eureka.client.fetch-registry=true
# eureka.client.enabled=true
